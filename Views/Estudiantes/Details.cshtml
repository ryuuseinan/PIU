@model PIU.Models.Estudiante

@{
    ViewData["Title"] = "Details";
}

<div class="card" style="background-color:rgba(0,0,0,0.1);">
    <div class="card-body">
        <div class="row">
            <div class="col-md-1 text-left">
                <a asp-action="Index">
                    <i class="fas fa-arrow-left" style="height:35px;width:35px" aria-hidden="true"></i>
                </a>
            </div>
            <div class="col-md-8">
                <h3>Información del estudiante</h3>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-3 text-center">
                <div id="preview" style="height: 200px">
                    <img src="~/@Model.Foto" class="img-circle img-responsive">
                </div>
                <h4 style="padding-top:10px;">@Html.DisplayFor(model => model.Nombre) @Html.DisplayFor(model => model.ApellidoPaterno) @Html.DisplayFor(model => model.ApellidoMaterno)</h4>
                <form asp-action="ActualizarImagen" asp-route-id="@Model.Id" enctype="multipart/form-data" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <div style="padding-top:10px;" class="form-group">
                        <input id="FotoArchivo" name="FotoArchivo" type="file" class="form-control" />
                    </div>
                    <!--
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#cropModal">
                        Seleccionar zona de recorte
                    </button>
                    -->
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary boton-lista">
                            <i class="fas fa-save"></i>
                        </button>
                    </div>
                </form>
            </div>
            
            <div class="col-md-3">
                <p>
                    <i class="fas fa-id-card"></i>
                    <strong>RUT</strong><br>
                    @if (Model.Rut != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Rut)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                </p>
                <p>
                    <i class="fas fa-venus-mars"></i>
                    <strong>Género</strong><br>
                    @if (Model.GeneroId != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Genero.Nombre)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                </p>
                    <i class="fas fa-phone"></i>
                    <strong>Número de celular</strong>
                    @if (Model.Celular != null)
                    {
                        <div style="display: flex; align-items: center;">
                            <span class="badge badge-dark" style="margin-right: 10px;">@Html.DisplayFor(model => model.Celular)</span>
                            <a href="https://api.whatsapp.com/send?phone=@Model.Celular&text=¡Hola!" class="btn btn-success" target="_blank" style="height: 25px; width: 25px; display: flex; justify-content: center; align-items: center;">
                                <i class="fab fa-whatsapp"></i>
                            </a>
                        </div>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                <br />
                <p>
                    <i class="far fa-envelope"></i>
                    <strong>Email institucional</strong><br>
                    @if (Model.CorreoInstitucional != null)
                    {
                        <a href="mailto:@Model.CorreoInstitucional" class="badge badge-dark">@Html.DisplayFor(model => model.CorreoInstitucional)</a>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                </p>
                <p>
                    <i class="far fa-envelope-open"></i>
                    <strong>Email personal</strong><br>
                    @if (Model.CorreoPersonal != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.CorreoPersonal)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                </p>
                <p>
                    <i class="far fa-calendar-alt"></i>
                    <strong>Fecha de nacimiento</strong><br>
                    @if (Model.FechaNacimiento != null)
                    {
                        <span class="badge badge-dark">@ViewBag.FechaNacimiento</span>
                        <span class="badge badge-dark">@ViewBag.Edad años</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
            </div>
            <div class="col-md-3 linea-separadora linea-separadora-derecha">
                <p>
                    <i class="far fa-calendar"></i>
                    <strong>Año de ingreso</strong><br>
                    @if (Model.EgresoPiu != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.EgresoPiu)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
                <p>
                    <i class="far fa-calendar"></i>
                    @if (Model.EgresoPiu != null)
                    {

                        <strong>Año de egreso</strong><br>
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.EgresoPiu)</span>
                    }
                    else
                    {
                        <strong>Año de egreso</strong><br>
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
                <p>
                    <i class="fas fa-graduation-cap"></i>
                    <strong>Carrera</strong><br>
                    @if (Model.CarreraId != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Carrera.Nombre)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
                <p>
                    <i class="fas fa-school"></i>
                    <strong>Campus</strong><br>
                    @if (Model.CampusId != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Campus.Nombre)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
                <p>
                    <i class="far fa-clock"></i>
                    <strong>Jornada</strong><br>
                    @if (Model.JornadaId != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Jornada.Nombre)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
                
            </div>
            <div class="col-md-3 text-right">
                <a class="btn btn-secondary boton-lista" asp-action="Edit" asp-route-id="@Model.Id">
                    <i class="fas fa-edit" aria-hidden="true"></i>
                </a>
            </div>
        </div>
    </div>
</div>
<br />
<div class="card" style="background-color:rgba(0,0,0,0.1);">
    <div class="card-body">
        <div class="row">
            <div class="col-md-1 text-left">
            </div>
            <div class="col-md-8">
                <h3>Diagnóstico del estudiante</h3>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-3 text-center">
                <div id="preview" style="height: 200px">
                    <img src="~/@Model.Foto" class="img-circle img-responsive">
                </div>
                <h4 style="padding-top:10px;">@Html.DisplayFor(model => model.Nombre) @Html.DisplayFor(model => model.ApellidoPaterno) @Html.DisplayFor(model => model.ApellidoMaterno)</h4>
                <form asp-action="ActualizarImagen" asp-route-id="@Model.Id" enctype="multipart/form-data" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <div style="padding-top:10px;" class="form-group">
                        <input id="FotoArchivo" name="FotoArchivo" type="file" class="form-control" />
                    </div>
                    <!--
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#cropModal">
                        Seleccionar zona de recorte
                    </button>
                    -->
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary boton-lista">
                            <i class="fas fa-save"></i>
                        </button>
                    </div>
                </form>
            </div>

            <div class="col-md-3">
                <p>
                    <strong>Discapacidad</strong><br>
                    @if (Model.Rut != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Rut)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                </p>
                <p>
                    <strong>Porcentaje de discapacidad</strong><br>
                    @if (Model.Genero != null)
                    {
                        @Html.DisplayFor(model => model.Genero)
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                </p>
                <p>
                    <strong>Tipo de discapacidad</strong><br>
                    @if (Model.Celular != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Celular)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                </p>
                <p>
                    <strong>Email institucional</strong><br>
                    @if (Model.CorreoInstitucional != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.CorreoInstitucional)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                </p>
                <p>
                    <strong>Email personal</strong><br>
                    @if (Model.CorreoPersonal != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.CorreoPersonal)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definido</span>
                    }
                </p>
                <p>
                    <strong>Fecha de nacimiento</strong><br>
                    @if (Model.FechaNacimiento != null)
                    {
                        <span class="badge badge-dark">@ViewBag.FechaNacimiento</span>
                        <span class="badge badge-dark">@ViewBag.Edad años</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
            </div>
            <div class="col-md-3 linea-separadora linea-separadora-derecha">
                <p>
                    <strong>Año de ingreso</strong><br>
                    @if (Model.EgresoPiu != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.EgresoPiu)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
                @if (Model.EgresoPiu != null)
                {
                    <p>
                        <strong>Año de egreso</strong><br>
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.EgresoPiu)</span>
                    </p>
                }
                else
                {
                    <p>
                        <strong>Año de egreso</strong><br>
                        <span class="badge badge-danger">No está definida</span>
                    </p>
                }

                <p>
                    <strong>Carrera</strong><br>
                    @if (Model.CarreraId != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Carrera.Nombre)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
                <p>
                    <strong>Campus</strong><br>
                    @if (Model.CampusId != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Campus.Nombre)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>
                <p>
                    <strong>Jornada</strong><br>
                    @if (Model.JornadaId != null)
                    {
                        <span class="badge badge-dark">@Html.DisplayFor(model => model.Jornada.Nombre)</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No está definida</span>
                    }
                </p>

            </div>
            <div class="col-md-3 text-right">
                <a class="btn btn-secondary boton-lista" asp-action="Edit" asp-route-id="@Model.Id">
                    <i class="fas fa-edit" aria-hidden="true"></i>
                </a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cropModalLabel">Seleccionar zona de recorte</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="image-preview-container-modal" style="height: 300px;">
                    <img id="image-preview-modal" class="img-responsive">
                </div>
                <div id="cropper1"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="cropAndUpload()">Recortar y Subir</button>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

@section Scripts {
    <script>
        
        $('#FotoArchivo').on('change', function () {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#image-preview-modal').attr('src', e.target.result);
                $('#image-preview-modal').show();
                $('#cropper1').croppie('bind', {
                    url: e.target.result
                });
            }
            reader.readAsDataURL(this.files[0]);
        });
        
        function cropAndUpload() {
            basic.croppie('result', 'blob').then(function (blob) {
                var formData = new FormData();
                formData.append('id', @Model.Id);
                formData.append('file', blob);
                var myAppUrlSettings =
                {
                    myAppRoot: '@Url.Action("ActualizarImagen", "Estudiantes")',
                    myApiUrl: '@Model.Id'
                }
                var request = new XMLHttpRequest();
                request.open('POST', myAppUrlSettings.myAppRoot, true);
                request.send(formData);
                request.onreadystatechange = function () {
                    if (request.readyState === XMLHttpRequest.DONE && this.status === 200) {
                        var responde = JSON.parse(request.responseText);
                        if (responde.message == "OK") {
                            alert("Imagen subida correctamente");
                            window.location.reload();
                        }
                        if (responde.message == "ERROR") {
                            alert("Error al subir la imagen");
                        }
                    }
                }
            });
        }
    </script>

    <script type="text/javascript">
        var basic = $('#cropper1').croppie({
            viewport: { width: '100%', height: '100%' },
            boundary: { width: '100%', height: 400 },  // Ajusta la altura según tus necesidades
            showZoomer: true,
            enableResize: true,
            url: 'https://via.placeholder.com/300x300',
            format: 'png'
        });

        $('#cropModal').on('shown.bs.modal', function () {
            // Ajusta el tamaño del Croppie cuando se muestra el modal
            basic.croppie('bind');
        });


        function readFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#cropper1').croppie('bind', {
                        url: e.target.result
                    }).then(function () {
                        console.log('jQuery bind complete');
                    });
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        $('#btnupload').on('click', function () {
            basic.croppie('result', 'blob').then(function (blob) {
                var formData = new FormData();
                formData.append('id', @Model.Id);
                formData.append('file', blob);
                var myAppUrlSettings =
                {
                    myAppRoot: '@Url.Action("ActualizarImagen", "Estudiantes")',
                    myApiUrl: '@Model.Id'
                }
                var request = new XMLHttpRequest();
                request.open('POST', myAppUrlSettings.myAppRoot, true);
                request.send(formData);
                request.onreadystatechange = function () {
                    if (request.readyState === XMLHttpRequest.DONE && this.status === 200) {
                        var responde = JSON.parse(request.responseText);
                        if (responde.message == "OK") {
                            alert("Imagen subida correctamente");
                            window.location.reload();
                        }
                        if (responde.message == "ERROR") {
                            alert("Error al subir la imagen");
                        }
                    }
                }
            });
        });
    </script>
}
